apiVersion: v1
kind: ServiceAccount
metadata:
  name: jo-airflow-service-account
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: read-pods
subjects:
  - kind: ServiceAccount
    name: jo-airflow-service-account
roleRef:
  kind: Role
  name: jo-airflow-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: jo-airflow-config
data:
  AIRFLOW__WEBSERVER__RBAC: 'False'
  AIRFLOW__WEBSERVER__AUTHENTICATE: 'False'
  AIRFLOW__CORE__SQL_ALCHEMY_CONN: sqlite:////data/db/airflow.db
  AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: sqlite:////data/db/airflow.db
  AIRFLOW__CORE__BASE_LOG_FOLDER: '/data/logs'
  AIRFLOW__LOGGING__BASE_LOG_FOLDER: '/data/logs'
  AIRFLOW__CORE__DAGS_FOLDER: /opt/airflow/dags
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jo-airflow-tester
spec:
  selector:
    matchLabels:
      app: airflow-tester
  template:
    metadata:
      labels:
        app: airflow-tester
    spec:
      serviceAccountName: jo-airflow-service-account
      securityContext:
        fsGroup: 3
      volumes:
        - name: dags
          hostPath:
            path: ${DAGS_PATH}
            type: Directory
        - name: data
          emptyDir: {}
          # hostPath:
          #   path: ${DATA_PATH}
          #   type: Directory

      initContainers:
        - name: init-db
          image: '${IMAGE_TAG}'
          imagePullPolicy: Never
          envFrom:
            - configMapRef:
                name: jo-airflow-config
          command:
            - bash
            - -c
            - |
              whoami &&
              mkdir -p /data/logs /data/db &&
              ls -la /data
              airflow db init
          volumeMounts:
            - name: data
              mountPath: /data

      containers:
        - name: ops
          image: bitnami/kubectl
          command:
            - sleep
            - infinity
          resources: {}
          envFrom:
            - configMapRef:
                name: jo-airflow-config
          volumeMounts:
            - name: data
              mountPath: /data
            - name: dags
              mountPath: /opt/airflow/dags
        - name: airflow-scheduler
          image: '${IMAGE_TAG}'
          imagePullPolicy: Never
          envFrom:
            - configMapRef:
                name: jo-airflow-config
          command:
            - airflow
            - scheduler
          resources: {}
          volumeMounts:
            - name: data
              mountPath: /data
            - name: dags
              mountPath: /opt/airflow/dags

        - name: airflow-web
          image: '${IMAGE_TAG}'
          imagePullPolicy: Never
          envFrom:
            - configMapRef:
                name: jo-airflow-config
          command:
            - airflow
            - webserver
          resources: {}
          ports:
            - containerPort: 8888
          volumeMounts:
            - name: data
              mountPath: /data
            - name: dags
              mountPath: /opt/airflow/dags
